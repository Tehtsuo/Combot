<?xml version="1.0" encoding="UTF-8"?>
<ISUI>

<!--

ComBot  Copyright © 2012  Tehtsuo and Vendan

This file is part of ComBot.

ComBot is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ComBot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ComBot.  If not, see <http://www.gnu.org/licenses/>.

-->

	<template name='Information.Font'>	
		<Name>Terminal</Name>
		<Size>8</Size>
		<Color>FFFFFFFF</Color>
	</template>	
	<template name='Text.Font'>	
		<Name>Verdana</Name>
		<Size>12</Size>
		<Color>FFFFFFFF</Color>
		<Bold />
	</template>	
	<template name='Checkbox.Font'>	
		<Name>Verdana</Name>
		<Size>12</Size>
		<Color>FFFFFFFF</Color>
		<Bold />
	</template>	
	<template name='Button.Font'>	
		<Name>Verdana</Name>
		<Size>12</Size>
		<Color>FF000000</Color>
		<Bold />
	</template>	

	<window name='ComBot_Miner'>
		<Visible>1</Visible>
		<BackGroundColor></BackGroundColor>
		<Border>0</Border>
		<X>200</X>
		<Y>300</Y>
		<Width>800</Width>
		<Height>600</Height>
		<TitleBar>
			<Width>100%</Width>
			<Height>20</Height>
			<Border>0</Border>
			<BackgroundColor>FF888888</BackgroundColor>
			<Children>
				<Text name='ComBot_Miner_TitleBar_Title'>
					<X>0</X>
					<Y>3</Y>
					<Width>100%</Width>
					<Height>20</Height>
					<Alignment>Center</Alignment>
					<Text>Miner Configuration</Text>
				</Text>
				<button	Name='Help'>
					<Font template='Button.Font' />
					<BackgroundColor>FF000000</BackgroundColor>
					<X>r80</X>
					<Y>0</Y>
					<Width>40</Width>
					<Height>20</Height>
					<Text>Help</Text>
					<OnLeftClick>
						timedcommand 0 "OSExecute http://combot.vendaria.net/index.php?title=Miner"
					</OnLeftClick>
				</button>
				<button	Name='Close'>
					<X>r40</X>
					<Y>0</Y>
					<Width>40</Width>
					<Height>20</Height>
					<Text>Close</Text>
					<OnLeftClick>
						if !${EVE.Bookmark[${Script[ComBot].VariableScope.Miner.Config.Dropoff}](exists)}
						{
							Script[ComBot].VariableScope.UI:Update["obj_Miner", "Unable to verify Dropoff bookmark", "r"]
						}
						if !${EVE.Bookmark[${Script[ComBot].VariableScope.Miner.Config.MiningSystem}](exists)}
						{
							Script[ComBot].VariableScope.UI:Update["obj_Miner", "Unable to verify Mining System bookmark", "r"]
						}
						Script[ComBot].VariableScope.Miner.LocalUI:Stop
						ui -unload "&filepath;/Miner"
					</OnLeftClick>
				</button>
			</Children>
		</TitleBar>
		<Children name="ComBot_Miner_Children">
			<Frame name="Miner_Frame">
				<X>0</X>
				<Y>5</Y>
				<Width>100%</Width>
				<Height>100%</Height>
				<BackgroundColor>FF000000</BackgroundColor>
				<Border>1</Border>
				<BorderColor>FFFFFFFF</BorderColor>
				<Children name="ComBot_Miner_Frame_Children">

					<Frame name="DropoffFrame">
						<X>0</X>
						<Y>0</Y>
						<Width>100%</Width>
						<Height>30%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
						
							<Text name='DropoffTitle'> 
								<X>34%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Dropoff Bookmark</Text>
							</Text>
							<Textentry name='Dropoff'> 
								<X>34%</X> 
								<Y>10%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<OnLoad>
									This:SetText[${Script[ComBot].VariableScope.Miner.Config.Dropoff}]
								</OnLoad>
								<OnChange>
									if ${This.Text.Length}
									{
										Script[ComBot].VariableScope.Miner.Config:SetDropoff[${This.Text}]
									}
									else
									{
										Script[ComBot].VariableScope.Miner.Config:SetDropoff[\"\"]
									}
									UIElement[DropoffList@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
									Script[ComBot].VariableScope.Miner.LocalUI:Start
								</OnChange>
							</Textentry>
							<listbox Name="DropoffList">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>34%</X>
								<Y>20%</Y>
								<Width>32%</Width>
								<Height>70%</Height>
								<OnLoad>
									This:SetZOrder[alwaysontop]
									This:Hide
								</OnLoad>
								<OnSelect>
									UIElement[Dropoff@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[${This.SelectedItem.Text}]
									Script[ComBot].VariableScope.Miner.Config:SetDropoff[${This.SelectedItem.Text}]
									This:Hide
									Script[ComBot].VariableScope.Miner.LocalUI:Stop
								</OnSelect>
							</listbox>
							
							<Text name='Dropoff_ContainerTitle'> 
								<X>67%</X> 
								<Y>83%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Container Name</Text>
							</Text>
							<TextEntry name='Dropoff_Container'> 
								<X>67%</X> 
								<Y>90%</Y> 
								<Width>32%</Width> 
								<Height>8%</Height> 
								<OnLoad>
									This:SetText[${Script[ComBot].VariableScope.Miner.Config.Container_Name}]
								</OnLoad>
								<OnChange>
									Script[ComBot].VariableScope.Miner.Config:SetContainer_Name[${This.Text}]
								</OnChange>
							</TextEntry>
							
							<Text name='DropoffSubTypeTitle'> 
								<X>67%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Dropoff Sub-Type</Text>
							</Text>
							<listbox Name="DropoffSubType">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>67%</X>
								<Y>10%</Y>
								<Width>32%</Width>
								<Height>80%</Height>
								<OnLoad>
									switch ${Script[ComBot].VariableScope.Miner.Config.Dropoff_Type}
									{
										case Jetcan
											This:AddItem[Fleet Jetcan]
											This:AddItem[Corporate Bookmark Jetcan]
											This:AddItem[On-Demand Jetcan]
											break
										case Corporation Folder
											This:AddItem[Corporation Folder 1]
											This:AddItem[Corporation Folder 2]
											This:AddItem[Corporation Folder 3]
											This:AddItem[Corporation Folder 4]
											This:AddItem[Corporation Folder 5]
											This:AddItem[Corporation Folder 6]
											This:AddItem[Corporation Folder 7]
											break
									}
									echo Setting ${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType}
									This.ItemByText["${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType}"]:Select
									if ${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType.Equal[Corporate Bookmark Jetcan]}
									{
										UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
										UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
										UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Jetcan Bookmark Prefix]
									}
									else
									{
										UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
										UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
									}
								</OnLoad>
								<OnSelect>
									Script[ComBot].VariableScope.Miner.Config:SetDropoff_SubType[${This.SelectedItem.Text}]
									if ${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType.Equal[Corporate Bookmark Jetcan]}
									{
										UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
										UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
										UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Jetcan Bookmark Prefix]
									}
									else
									{
										UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
										UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
									}
								</OnSelect>
							</listbox>

							<Text name='ThresholdTitle'> 
								<X>34%</X> 
								<Y>33%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<OnLoad>
									if ${MyShip.HasOreHold}
									{
										if ${Script[ComBot].VariableScope.Miner.Config.OrcaMode}
										{
											This:SetText[Corp Hangar Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${EVEWindow[ByName, Inventory].ChildCapacity[ShipCorpHangar]}].Round} m3]
										}
										else
										{
											This:SetText[OreHold Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${EVEWindow[ByName, Inventory].ChildCapacity[ShipOreHold]}].Round} m3]
										}
									}
									else
									{
										This:SetText[Cargo Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${MyShip.CargoCapacity}].Round} m3]
									}
								</OnLoad>
							</Text>						 
							<Slider name='Threshold'> 
								<X>34%</X> 
								<Y>40%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<Border>1</Border>
								<OnLoad>
									This:SetRange[100]
									This:SetValue[${Script[ComBot].VariableScope.Miner.Config.Threshold}]
								</OnLoad>
								<OnChange>
									Script[ComBot].VariableScope.Miner.Config:SetThreshold[${This.Value}]
									if ${MyShip.HasOreHold}
									{
										if ${Script[ComBot].VariableScope.Miner.Config.OrcaMode}
										{
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Corp Hangar Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${EVEWindow[ByName, Inventory].ChildCapacity[ShipCorpHangar]}].Round} m3]
										}
										else
										{
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[OreHold Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${EVEWindow[ByName, Inventory].ChildCapacity[ShipOreHold]}].Round} m3]
										}
									}
									else
									{
										UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Cargo Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${MyShip.CargoCapacity}].Round} m3]
									}
								</OnChange>
							</Slider>						 
							
							<Text name='DropoffTypeTitle'> 
								<X>1%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Dropoff Type</Text>
							</Text>
							<Listbox Name="DropoffType">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>1%</X>
								<Y>10%</Y>
								<Width>32%</Width>
								<Height>80%</Height>
								<Items>
									<Item>Personal Hangar</Item>
									<Item>Orca</Item>
									<Item>Container</Item>
									<Item>Jetcan</Item>
									<Item>No Dropoff</Item>
									<Item>Corporation Folder</Item>
								</Items>
								<OnLoad>
									This.ItemByText[${Script[ComBot].VariableScope.Miner.Config.Dropoff_Type}]:Select
									switch ${This.SelectedItem.Text}
									{
										case Jetcan
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner].ItemByText[${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType}]:Select
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner].ItemByText[${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType}]:Select
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											break
										case Orca
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Orca Name]
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											break
										case Container
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Container Name]
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											break
										case Corporation Folder
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner].ItemByText[${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType}]:Select
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											break
										case No Dropoff
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											break
										default
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
									}
								</OnLoad>
								<OnSelect>
									Script[ComBot].VariableScope.Miner.Config:SetDropoff_Type[${This.SelectedItem.Text}]
									UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:ClearItems
									switch ${This.SelectedItem.Text}
									{
										case Jetcan
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Fleet Jetcan]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporate Bookmark Jetcan]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[On-Demand Jetcan]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner].ItemByText[${Script[ComBot].VariableScope.Miner.Config.Dropoff_SubType}]:Select
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											break
										case Orca
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Orca Name]
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											break
										case Container
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Container Name]
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											break
										case Corporation Folder
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporation Folder 1]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporation Folder 2]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporation Folder 3]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporation Folder 4]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporation Folder 5]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporation Folder 6]
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:AddItem[Corporation Folder 7]
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											break
										case No Dropoff
											UIElement[DropoffSubTypeTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[DropoffSubType@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											break
										default
											UIElement[Dropoff_Container@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[Dropoff_ContainerTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Hide
											UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
											UIElement[Threshold@DropoffFrame@Miner_Frame@ComBot_Miner]:Show
									}
									
									
								</OnSelect>
							</Listbox>
						</Children>
					</Frame>
					
		

					<Text name='MiningSystemTitle'> 
						<X>1%</X> 
						<Y>40%</Y> 
						<Width>32%</Width> 
						<Height>2%</Height> 
						<Alignment>Center</Alignment>
						<Text>Mining System Bookmark</Text>
					</Text>						 
					<TextEntry name='MiningSystem'> 
						<X>1%</X> 
						<Y>42%</Y> 
						<Width>32%</Width> 
						<Height>3%</Height> 
						<OnLoad>
							This:SetText[${Script[ComBot].VariableScope.Miner.Config.MiningSystem}]
						</OnLoad>
						<OnChange>
							if ${This.Text.Length}
							{
								Script[ComBot].VariableScope.Miner.Config:SetMiningSystem[${This.Text}]
							}
							else
							{
								Script[ComBot].VariableScope.Miner.Config:SetMiningSystem[\"\"]
							}
							UIElement[MiningSystemList@Miner_Frame@ComBot_Miner]:Show
							Script[ComBot].VariableScope.Miner.LocalUI:Start
						</OnChange>
					</TextEntry>						 
					<listbox Name="MiningSystemList">
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>45%</Y>
						<Width>32%</Width>
						<Height>17%</Height>
						<OnLoad>
							This:SetZOrder[alwaysontop]
							This:Hide
						</OnLoad>
						<OnSelect>
							UIElement[MiningSystem@Miner_Frame@ComBot_Miner]:SetText[${This.SelectedItem.Text}]
							Script[ComBot].VariableScope.Miner.Config:SetMiningSystem[${This.SelectedItem.Text}]
							This:Hide
							Script[ComBot].VariableScope.Miner.LocalUI:Stop
						</OnSelect>
					</listbox>

				
					<Text name='OrePrefixTitle'>
						<X>1%</X>
						<Y>60%</Y>
						<Width>20%</Width> 
						<Height>2%</Height> 
						<Text>Belt Prefix:</Text>
					</Text>
					<Textentry name='OrePrefix'>
						<X>13%</X>
						<Y>66%</Y>
						<Width>20%</Width> 
						<Height>3%</Height> 
						<OnLoad>
							This:SetText[${Script[ComBot].VariableScope.Miner.Config.BeltPrefix}]
						</OnLoad>
						<OnChange>
							if ${This.Text.Length} > 0
							{
								Script[ComBot].VariableScope.Miner.Config:SetBeltPrefix[${This.Text}]
							}
						</OnChange>
					</Textentry>
					
					<Text name='IcePrefixTitle'>
						<X>1%</X>
						<Y>70%</Y>
						<Width>20%</Width> 
						<Height>2%</Height> 
						<Text>Ice Belt Prefix:</Text>
					</Text>
					<Textentry name='IcePrefix'>
						<X>13%</X>
						<Y>72%</Y>
						<Width>20%</Width> 
						<Height>3%</Height> 
						<OnLoad>
							This:SetText[${Script[ComBot].VariableScope.Miner.Config.IceBeltPrefix}]
						</OnLoad>
						<OnChange>
							if ${This.Text.Length} > 0
							{
								Script[ComBot].VariableScope.Miner.Config:SetIceBeltPrefix[${This.Text}]
							}
						</OnChange>
					</Textentry>
					
					<Checkbox name='obj_MinerUseBookmarks'>
						<X>1%</X>
						<Y>83%</Y>
						<Width>20%</Width> 
						<Height>3%</Height> 
						<Text>Use belt bookmarks</Text>
						<OnLoad>
							if ${Script[ComBot].VariableScope.Miner.Config.UseBookmarks}
							{
								This:SetChecked
								UIElement[OrePrefixTitle@Miner_Frame@ComBot_Miner]:Show
								UIElement[OrePrefix@Miner_Frame@ComBot_Miner]:Show
								UIElement[IcePrefixTitle@Miner_Frame@ComBot_Miner]:Show
								UIElement[IcePrefix@Miner_Frame@ComBot_Miner]:Show
							}
							else
							{
								UIElement[OrePrefixTitle@Miner_Frame@ComBot_Miner]:Hide
								UIElement[OrePrefix@Miner_Frame@ComBot_Miner]:Hide
								UIElement[IcePrefixTitle@Miner_Frame@ComBot_Miner]:Hide
								UIElement[IcePrefix@Miner_Frame@ComBot_Miner]:Hide
							}
							This:SetZOrder[movetop]
						</OnLoad>
						<OnLeftClick>
							Script[ComBot].VariableScope.Miner.Config:SetUseBookmarks[${This.Checked}]
							if ${This.Checked}
							{
								UIElement[OrePrefixTitle@Miner_Frame@ComBot_Miner]:Show
								UIElement[OrePrefix@Miner_Frame@ComBot_Miner]:Show
								UIElement[IcePrefixTitle@Miner_Frame@ComBot_Miner]:Show
								UIElement[IcePrefix@Miner_Frame@ComBot_Miner]:Show
							}
							else
							{
								UIElement[OrePrefixTitle@Miner_Frame@ComBot_Miner]:Hide
								UIElement[OrePrefix@Miner_Frame@ComBot_Miner]:Hide
								UIElement[IcePrefixTitle@Miner_Frame@ComBot_Miner]:Hide
								UIElement[IcePrefix@Miner_Frame@ComBot_Miner]:Hide
							}
							This:SetZOrder[movetop]
						</OnLeftClick>
					</Checkbox>
					
					<Text name='MaxLockTitle'> 
						<X>34%</X> 
						<Y>35%</Y> 
						<Width>32%</Width> 
						<Height>2%</Height> 
						<Alignment>Center</Alignment>
						<OnLoad>
							This:SetText[Lock ${Script[ComBot].VariableScope.Miner.Config.MaxLaserLocks} targets for mining]
						</OnLoad>
					</Text>						 
					<Slider name='MaxLock'> 
						<X>34%</X> 
						<Y>37%</Y> 
						<Width>32%</Width> 
						<Height>5%</Height> 
						<Border>1</Border>
						<OnLoad>
							This:SetRange[10]
							This:SetValue[${Script[ComBot].VariableScope.Miner.Config.MaxLaserLocks}]
						</OnLoad>
						<OnChange>
							Script[ComBot].VariableScope.Miner.Config:SetMaxLaserLocks[${This.Value}]
							UIElement[MaxLockTitle@Miner_Frame@ComBot_Miner]:SetText[Lock ${Script[ComBot].VariableScope.Miner.Config.MaxLaserLocks} targets for mining]
						</OnChange>
					</Slider>						 
					
					<Checkbox name='obj_MinerOrcaMode'>
						<X>1%</X>
						<Y>58%</Y>
						<Width>32%</Width> 
						<Height>3%</Height> 
						<Text>Orca Mode</Text>
							<OnLoad>
							if ${Script[ComBot].VariableScope.Miner.Config.OrcaMode}
							{
								This:SetChecked
								if ${This.Checked}
								{
									UIElement[MaxLockTitle@Miner_Frame@ComBot_Miner]:Hide
									UIElement[MaxLock@Miner_Frame@ComBot_Miner]:Hide
								}
								else
								{
									UIElement[MaxLockTitle@Miner_Frame@ComBot_Miner]:Show
									UIElement[MaxLock@Miner_Frame@ComBot_Miner]:Show
								}
							}
							This:SetZOrder[movetop]
						</OnLoad>
						<OnLeftClick>
							Script[ComBot].VariableScope.Miner.Config:SetOrcaMode[${This.Checked}]
							if ${This.Checked}
							{
								UIElement[MaxLockTitle@Miner_Frame@ComBot_Miner]:Hide
								UIElement[MaxLock@Miner_Frame@ComBot_Miner]:Hide
							}
							else
							{
								UIElement[MaxLockTitle@Miner_Frame@ComBot_Miner]:Show
								UIElement[MaxLock@Miner_Frame@ComBot_Miner]:Show
							}
							if ${MyShip.HasOreHold}
							{
								if ${Script[ComBot].VariableScope.Miner.Config.OrcaMode}
								{
									UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Corp Hangar Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${EVEWindow[ByName, Inventory].ChildCapacity[ShipCorpHangar]}].Round} m3]
								}
								else
								{
									UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[OreHold Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${EVEWindow[ByName, Inventory].ChildCapacity[ShipOreHold]}].Round} m3]
								}
							}
							else
							{
								UIElement[ThresholdTitle@DropoffFrame@Miner_Frame@ComBot_Miner]:SetText[Cargo Threshold: ${Script[ComBot].VariableScope.Miner.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Miner.Config.Threshold} * .01 * ${MyShip.CargoCapacity}].Round} m3]
							}
							This:SetZOrder[movetop]
						</OnLeftClick>
					</Checkbox>
					
					<Text name='obj_MinerOrePriorityTitle'> 
						<X>67%</X> 
						<Y>50%</Y> 
						<Width>32%</Width> 
						<Height>2%</Height> 
						<Alignment>Center</Alignment>
						<Text>Ore/Ice Priority</Text>
					</Text>
					<listbox Name="obj_MinerOrePriority">
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>67%</X>
						<Y>53%</Y>
						<Width>32%</Width>
						<Height>40%</Height>
						<SelectMultiple>1</SelectMultiple>
						<Sort>User</Sort>
						<OnLeftClick>
							variable settingsetref Ores
							variable int counter
							variable collection:bool selected

							if ${UIElement[obj_MinerIceMining@@Miner_Frame@ComBot_Miner].Checked}
							{
								Ores:Set[${LavishSettings[ComBotSettings].FindSet[${Me.Name}].FindSet[Miner].FindSet[ICE_Types]}]
								Ores:Clear
								for ( counter:Set[1] ; ${counter} &lt;= ${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].SelectedItems} ; counter:Inc )
								{
									selected:Set[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].SelectedItem[${counter}]},TRUE]
								}
								for ( counter:Set[1] ; ${counter} &lt;= ${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items} ; counter:Inc )
								{
									if ${selected[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].OrderedItem[${counter}]}]}
										Ores:AddSetting[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].OrderedItem[${counter}]},1]
								}							
							}
							else
							{
								Ores:Set[${LavishSettings[ComBotSettings].FindSet[${Me.Name}].FindSet[Miner].FindSet[Ore_Types]}]
								Ores:Clear
								for ( counter:Set[1] ; ${counter} &lt;= ${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].SelectedItems} ; counter:Inc )
								{
									selected:Set[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].SelectedItem[${counter}]},TRUE]
								}
								for ( counter:Set[1] ; ${counter} &lt;= ${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items} ; counter:Inc )
								{
									if ${selected[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].OrderedItem[${counter}]}]}
										switch ${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].OrderedItem[${counter}]}
										{
											case Mercoxit
											Ores:AddSetting[Vitreous Mercoxit,1]
											Ores:AddSetting[Magma Mercoxit,1]
											Ores:AddSetting[Mercoxit,1]
											break
											case Arkonor
											Ores:AddSetting[Prime Arkonor,1]
											Ores:AddSetting[Crimson Arkonor,1]
											Ores:AddSetting[Arkonor,1]
											break
											case Bistot
											Ores:AddSetting[Monoclinic Bistot,1]
											Ores:AddSetting[Triclinic Bistot,1]
											Ores:AddSetting[Bistot,1]
											break
											case Crokite
											Ores:AddSetting[Crystalline Crokite,1]
											Ores:AddSetting[Sharp Crokite,1]
											Ores:AddSetting[Crokite,1]
											break
											case Spodumain
											Ores:AddSetting[Gleaming Spodumain,1]
											Ores:AddSetting[Bright Spodumain,1]
											Ores:AddSetting[Spodumain,1]
											break
											case Dark Ochre
											Ores:AddSetting[Obsidian Ochre,1]
											Ores:AddSetting[Onyx Ochre,1]
											Ores:AddSetting[Dark Ochre,1]
											break
											case Gneiss
											Ores:AddSetting[Prismatic Gneiss,1]
											Ores:AddSetting[Iridescent Gneiss,1]
											Ores:AddSetting[Gneiss,1]
											break
											case Hedbergite
											Ores:AddSetting[Glazed Hedbergite,1]
											Ores:AddSetting[Vitric Hedbergite,1]
											Ores:AddSetting[Hedbergite,1]
											break
											case Hemorphite
											Ores:AddSetting[Radiant Hemorphite,1]
											Ores:AddSetting[Vivid Hemorphite,1]
											Ores:AddSetting[Hemorphite,1]
											break
											case Jaspet
											Ores:AddSetting[Pristine Jaspet,1]
											Ores:AddSetting[Pure Jaspet,1]
											Ores:AddSetting[Jaspet,1]
											break
											case Kernite
											Ores:AddSetting[Fiery Kernite,1]
											Ores:AddSetting[Luminous Kernite,1]
											Ores:AddSetting[Kernite,1]
											break
											case Omber
											Ores:AddSetting[Golden Omber,1]
											Ores:AddSetting[Silvery Omber,1]
											Ores:AddSetting[Omber,1]
											break
											case Plagioclase
											Ores:AddSetting[Rich Plagioclase,1]
											Ores:AddSetting[Azure Plagioclase,1]
											Ores:AddSetting[Plagioclase,1]
											break
											case Pyroxeres
											Ores:AddSetting[Viscous Pyroxeres,1]
											Ores:AddSetting[Solid Pyroxeres,1]
											Ores:AddSetting[Pyroxeres,1]
											break
											case Scordite
											Ores:AddSetting[Massive Scordite,1]
											Ores:AddSetting[Condensed Scordite,1]
											Ores:AddSetting[Scordite,1]
											break
											case Veldspar
											Ores:AddSetting[Dense Veldspar,1]
											Ores:AddSetting[Concentrated Veldspar,1]
											Ores:AddSetting[Veldspar,1]
											break
										}
								}
							}
						</OnLeftClick>
					</listbox>
					<Checkbox name='obj_MinerIceMining'>
						<X>67%</X>
						<Y>95%</Y>
						<Width>32%</Width> 
						<Height>20</Height> 
						<Text>Ice Mining</Text>
							<OnLoad>
								variable int count
								variable settingsetref Ores

								if ${Script[ComBot].VariableScope.Miner.Config.IceMining}
								{
									This:SetChecked
								}
								
								if ${This.Checked}
								{
									variable collection:bool MineOre
									variable iterator iter
									Ores:Set[${LavishSettings[ComBotSettings].FindSet[${Me.Name}].FindSet[Miner].FindSet[ICE_Types]}]
									if ${Ores(exists)}
									{
										variable int iceupdated[12]
										Ores:GetSettingIterator[iter]
										if ${iter:First(exists)}
										{
											do
											{
												MineOre:Set[${iter.Value.Name},TRUE]
												switch ${iter.Value.Name}
												{
												case Dark Glitter
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Dark Glitter]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Gelidus
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Gelidus]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Glare Crust
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Glare Crust]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Krystallos
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Krystallos]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Clear Icicle
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Clear Icicle]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Smooth Glacial Mass
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Smooth Glacial Mass]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Glacial Mass
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Glacial Mass]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Pristine White Glaze
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Pristine White Glaze]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case White Glaze
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[White Glaze]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Thick Blue Ice
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Thick Blue Ice]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Enriched Clear Icicle
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Enriched Clear Icicle]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Blue Ice
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Blue Ice]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
													
												default
													break
												}
											}
											while ${iter:Next(exists)}
										}
										variable string IceTypes="Dark Glitter,Gelidus,Glare Crust,Krystallos,Clear Icicle,Smooth Glacial Mass,Glacial Mass,Pristine White Glaze,White Glaze,Thick Blue Ice,Enriched Clear Icicle,Blue Ice"
										for ( count:Set[1] ; ${count} &lt;= 12 ; count:Inc )
										{
											if !${MineOre[${Arg[${count},${IceTypes}]}](exists)}
											{
												UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[${Arg[${count},${IceTypes}]}]
											}
										}
									}									
								}
								else
								{
									Ores:Set[${LavishSettings[ComBotSettings].FindSet[${Me.Name}].FindSet[Miner].FindSet[Ore_Types]}]
									if ${Ores(exists)}
									{
										Ores:GetSettingIterator[iter]
										if ${iter:First(exists)}
										{
											do
											{
												MineOre:Set[${iter.Value.Name},TRUE]
												switch ${iter.Value.Name}
												{
												case Mercoxit
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Mercoxit]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Arkonor
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Arkonor]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Bistot
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Bistot]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Crokite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Crokite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Spodumain
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Spodumain]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Dark Ochre
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Dark Ochre]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Gneiss
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Gneiss]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Hedbergite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Hedbergite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Hemorphite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Hemorphite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Jaspet
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Jaspet]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Kernite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Kernite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Omber
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Omber]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Plagioclase
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Plagioclase]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Pyroxeres
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Pyroxeres]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Scordite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Scordite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Veldspar
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Veldspar]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												default
													break
												}
											}
											while ${iter:Next(exists)}
										}
										variable string OreTypes="Mercoxit,Arkonor,Bistot,Crokite,Spodumain,Dark Ochre,Gneiss,Hedbergite,Hemorphite,Jaspet,Pyroxeres,Kernite,Plagioclase,Omber,Scordite,Veldspar"
										for ( count:Set[1] ; ${count} &lt;= 16 ; count:Inc )
										{
											if !${MineOre[${Arg[${count},${OreTypes}]}](exists)}
											{
												UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[${Arg[${count},${OreTypes}]}]
											}
										}
									}
								}								
								This:SetZOrder[movetop]
							</OnLoad>
							<OnLeftClick>
								Script[ComBot].VariableScope.Miner.Config:SetIceMining[${This.Checked}]
								UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:ClearItems

								variable int count
								variable settingsetref Ores
								variable collection:bool MineOre
								variable iterator iter

								if ${This.Checked}
								{
									Ores:Set[${LavishSettings[ComBotSettings].FindSet[${Me.Name}].FindSet[Miner].FindSet[ICE_Types]}]
									if ${Ores(exists)}
									{
										Ores:GetSettingIterator[iter]
										if ${iter:First(exists)}
										{
											do
											{
												MineOre:Set[${iter.Value.Name},TRUE]
												switch ${iter.Value.Name}
												{
												case Dark Glitter
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Dark Glitter]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Gelidus
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Gelidus]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Glare Crust
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Glare Crust]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Krystallos
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Krystallos]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Clear Icicle
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Clear Icicle]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Smooth Glacial Mass
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Smooth Glacial Mass]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Glacial Mass
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Glacial Mass]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Pristine White Glaze
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Pristine White Glaze]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case White Glaze
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[White Glaze]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Thick Blue Ice
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Thick Blue Ice]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Enriched Clear Icicle
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Enriched Clear Icicle]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Blue Ice
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Blue Ice]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
													
												default
													break
												}
											}
											while ${iter:Next(exists)}
										}
										variable string IceTypes="Dark Glitter,Gelidus,Glare Crust,Krystallos,Clear Icicle,Smooth Glacial Mass,Glacial Mass,Pristine White Glaze,White Glaze,Thick Blue Ice,Enriched Clear Icicle,Blue Ice"
										for ( count:Set[1] ; ${count} &lt;= 12 ; count:Inc )
										{
											if !${MineOre[${Arg[${count},${IceTypes}]}](exists)}
											{
												UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[${Arg[${count},${IceTypes}]}]
											}
										}
									}									
								}
								else
								{
									Ores:Set[${LavishSettings[ComBotSettings].FindSet[${Me.Name}].FindSet[Miner].FindSet[Ore_Types]}]
									if ${Ores(exists)}
									{
										Ores:GetSettingIterator[iter]
										if ${iter:First(exists)}
										{
											do
											{
												MineOre:Set[${iter.Value.Name},TRUE]
												switch ${iter.Value.Name}
												{
												case Mercoxit
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Mercoxit]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Arkonor
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Arkonor]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Bistot
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Bistot]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Crokite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Crokite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Spodumain
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Spodumain]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Dark Ochre
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Dark Ochre]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Gneiss
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Gneiss]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Hedbergite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Hedbergite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Hemorphite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Hemorphite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Jaspet
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Jaspet]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Kernite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Kernite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Omber
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Omber]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Plagioclase
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Plagioclase]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Pyroxeres
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Pyroxeres]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Scordite
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Scordite]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												case Veldspar
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[Veldspar]
													UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Item[${UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner].Items}]:Select
													break
												default
													break
												}
											}
											while ${iter:Next(exists)}
										}
										variable string OreTypes="Mercoxit,Arkonor,Bistot,Crokite,Spodumain,Dark Ochre,Gneiss,Hedbergite,Hemorphite,Jaspet,Pyroxeres,Kernite,Plagioclase,Omber,Scordite,Veldspar"
										for ( count:Set[1] ; ${count} &lt;= 16 ; count:Inc )
										{
											if !${MineOre[${Arg[${count},${OreTypes}]}](exists)}
											{
												UIElement[obj_MinerOrePriority@Miner_Frame@ComBot_Miner]:AddItem[${Arg[${count},${OreTypes}]}]
											}
										}
									}
								}
								Script[ComBot].VariableScope.Miner:PopulateTargetList
								This:SetZOrder[movetop]
							</OnLeftClick>
					</Checkbox>
					
					
				</Children>
			</Frame>
		</Children>
	</window>
	
</ISUI>
