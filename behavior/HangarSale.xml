<?xml version="1.0" encoding="UTF-8"?>
<ISUI>

<!--

ComBot  Copyright © 2012  Tehtsuo and Vendan

This file is part of ComBot.

ComBot is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ComBot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ComBot.  If not, see <http://www.gnu.org/licenses/>.

-->

	<template name='Information.Font'>	
		<Name>Terminal</Name>
		<Size>8</Size>
		<Color>FFFFFFFF</Color>
	</template>	

	<window name='ComBot_HangarSale'>
		<Visible>1</Visible>
		<BackGroundColor></BackGroundColor>
		<Border>0</Border>
		<X>200</X>
		<Y>300</Y>
		<Width>800</Width>
		<Height>600</Height>
		<TitleBar>
			<Width>100%</Width>
			<Height>20</Height>
			<Border>0</Border>
			<BackgroundColor>FF000000</BackgroundColor>
			<Children>
				<Text name='ComBot_Miner_TitleBar_Title'>
					<X>0</X>
					<Y>3</Y>
					<Width>100%</Width>
					<Height>20</Height>
					<Alignment>Center</Alignment>
					<Text>HangarSale Configuration</Text>
				</Text>
				<button	Name='Close'>
					<X>r40</X>
					<Y>0</Y>
					<Width>40</Width>
					<Height>20</Height>
					<Text>Close</Text>
					<OnLeftClick>
						if !${EVE.Bookmark[${Script[ComBot].VariableScope.HangarSale.Config.SellSystem}](exists)}
						{
							Script[ComBot].VariableScope.UI:Update["obj_HangarSale", "Unable to verify Sell System bookmark", "r"]
						}
						Script[ComBot].VariableScope.HangarSale.LocalUI:Stop
						ui -unload "&filepath;/HangarSale"
					</OnLeftClick>
				</button>
			</Children>
		</TitleBar>
		<Children name="ComBot_HangarSale_Children">
			<Frame name="ComBot_HangarSale_Frame">
				<X>0</X>
				<Y>5</Y>
				<Width>100%</Width>
				<Height>100%</Height>
				<BackgroundColor>FF000000</BackgroundColor>
				<Border>1</Border>
				<BorderColor>FFFFFFFF</BorderColor>
				<Children name="ComBot_HangarSale_Frame_Children">

					<Text name='SellingFrameTitle'> 
						<X>1%</X> 
						<Y>2%</Y> 
						<Width>32%</Width> 
						<Height>4%</Height> 
						<Text>Selling Configuration</Text>
						<OnLoad>
							This.Font:SetColor[FFFFFF00]
						</OnLoad>
					</Text>
					<Frame name="SellingFrame">
						<X>0%</X>
						<Y>4%</Y>
						<Width>100%</Width>
						<Height>30%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='SellSystemTitle'> 
								<X>1%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Sell System Bookmark</Text>
							</Text>						 
							<Textentry Name="SellSystem">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>1%</X>
								<Y>10%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<OnLoad>
									This:SetText[${Script[ComBot].VariableScope.HangarSale.Config.SellSystem}]
								</OnLoad>
								<OnChange>
									if ${This.Text.Length}
									{
										Script[ComBot].VariableScope.HangarSale.Config:SetSellSystem[${This.Text}]
									}
									else
									{
										Script[ComBot].VariableScope.HangarSale.Config:SetSellSystem[\"\"]
									}
									UIElement[SellSystemList@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
									Script[ComBot].VariableScope.HangarSale.LocalUI:Start
								</OnChange>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["This field needs to contain the exact name of a bookmark within the system on which you wish your prices to be based.  ComBot will query Eve-Central to determine what prices to apply to each item based on current prices in the system selected."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</Textentry>
							<listbox Name="SellSystemList">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>1%</X>
								<Y>25%</Y>
								<Width>32%</Width>
								<Height>70%</Height>
								<OnLoad>
									This:SetZOrder[alwaysontop]
									This:Hide
								</OnLoad>
								<OnSelect>
									UIElement[SellSystem@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[${This.SelectedItem.Text}]
									Script[ComBot].VariableScope.HangarSale.Config:SetSellSystem[${This.SelectedItem.Text}]
									Script[ComBot].VariableScope.HangarSale.LocalUI:Stop
									This:Hide
								</OnSelect>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["This field needs to contain the exact name of a bookmark within the system on which you wish your prices to be based.  ComBot will query Eve-Central to determine what prices to apply to each item based on current prices in the system selected."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</listbox>
							
							<Checkbox name='obj_HangarSale_RePrice'>
								<X>34%</X>
								<Y>30%</Y>
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Text>Re-price active sell orders</Text>
									<OnLoad>
									if ${Script[ComBot].VariableScope.HangarSale.Config.RePrice}
									{
										This:SetChecked
									}
								</OnLoad>
								<OnLeftClick>
									Script[ComBot].VariableScope.HangarSale.Config:SetRePrice[${This.Checked}]
								</OnLeftClick>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["If this is checked, ComBot will update prices on current orders if they no longer match ComBot's estimates based on the selected price mode."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</Checkbox>
							<Checkbox name='obj_HangarSale_Sell'>
								<X>34%</X>
								<Y>40%</Y>
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Text>Place new sell orders</Text>
								<OnLoad>
									if ${Script[ComBot].VariableScope.HangarSale.Config.Sell}
									{
										This:SetChecked
									}
								</OnLoad>
								<OnLeftClick>
									Script[ComBot].VariableScope.HangarSale.Config:SetSell[${This.Checked}]
								</OnLeftClick>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["When this is checked, ComBot will place new sell orders based on your selected price mode."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</Checkbox>
							<Checkbox name='MoveRefine'>
								<X>34%</X>
								<Y>50%</Y>
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Text>Move items to be refined to active ship</Text>
								<OnLoad>
									if ${Script[ComBot].VariableScope.HangarSale.Config.MoveRefine}
									{
										This:SetChecked
									}
								</OnLoad>
								<OnLeftClick>
									Script[ComBot].VariableScope.HangarSale.Config:SetMoveRefine[${This.Checked}]
								</OnLeftClick>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["When this is checked, ComBot will move items to your active ship when the items are worth more when reprocessed into minerals."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</Checkbox>
							
							<Text name='obj_HangarSale_UndercutPercentTitle'> 
								<X>67%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<OnLoad>
									This:SetText[Undercut %: ${Script[ComBot].VariableScope.HangarSale.Config.UndercutPercent}]
								</OnLoad>
							</Text>						 
							<Slider name='obj_HangarSale_UndercutPercent'> 
								<X>67%</X> 
								<Y>10%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<Border>1</Border>
								<Range>100</Range>
								<OnLoad>
									This:SetValue[${Script[ComBot].VariableScope.HangarSale.Config.UndercutPercent}]
								</OnLoad>
								<OnChange>
									UIElement[obj_HangarSale_UndercutPercentTitle@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[Undercut %: ${Script[ComBot].VariableScope.HangarSale.Config.UndercutPercent}]
									Script[ComBot].VariableScope.HangarSale.Config:SetUndercutPercent[${This.Value}]
								</OnChange>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["Use this slider to determine the percentage to undercut items.  ComBot will use the smaller between percentage and straight ISK value."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</Slider>						 
							<Text name='obj_HangarSale_UndercutValueTitle'> 
								<X>67%</X> 
								<Y>33%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<OnLoad>
									This:SetText[Undercut Value: ${Script[ComBot].VariableScope.ComBot.ISK_To_Str[${Script[ComBot].VariableScope.HangarSale.Config.UndercutValue}]}]
								</OnLoad>
							</Text>						 
							<Slider name='obj_HangarSale_UndercutValue'> 
								<X>67%</X> 
								<Y>40%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<Border>1</Border>
								<Range>1000</Range>
								<OnLoad>
									This:SetValue[${Script[ComBot].VariableScope.HangarSale.Config.UndercutValue}]
								</OnLoad>
								<OnChange>
									Script[ComBot].VariableScope.HangarSale.Config:SetUndercutValue[${This.Value}]
									UIElement[obj_HangarSale_UndercutValueTitle@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[Undercut Value: ${Script[ComBot].VariableScope.ComBot.ISK_To_Str[${Script[ComBot].VariableScope.HangarSale.Config.UndercutValue}]}]
								</OnChange>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["Use this slider to determine the straight ISK value to undercut items.  ComBot will use the smaller between percentage and straight ISK value."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</Slider>						 

							<Text name='obj_HangarSale_PriceModeTitle'> 
								<X>34%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Price Mode</Text>
							</Text>						 
							<ComboBox name='obj_HangarSale_PriceMode'> 
								<X>34%</X> 
								<Y>10%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<Items>
									<Item>Undercut Average</Item>
									<Item>Undercut Lowest</Item>
									<Item>Match Highest Buyout</Item>
								</Items>
								<OnLoad>
									This.ItemByText[${Script[ComBot].VariableScope.HangarSale.Config.PriceMode}]:Select
									switch ${Script[ComBot].VariableScope.HangarSale.Config.PriceMode}
									{
										case Match Highest Buyout
											UIElement[obj_HangarSale_UndercutPercentTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											UIElement[obj_HangarSale_UndercutPercent@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											UIElement[obj_HangarSale_UndercutValueTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											UIElement[obj_HangarSale_UndercutValue@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											break
										default
											UIElement[obj_HangarSale_UndercutPercentTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
											UIElement[obj_HangarSale_UndercutPercent@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
											UIElement[obj_HangarSale_UndercutValueTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
											UIElement[obj_HangarSale_UndercutValue@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
									}
								</OnLoad>
								<OnSelect>
									Script[ComBot].VariableScope.HangarSale.Config:SetPriceMode[${This.SelectedItem.Text}]
									switch ${Script[ComBot].VariableScope.HangarSale.Config.PriceMode}
									{
										case Match Highest Buyout
											UIElement[obj_HangarSale_UndercutPercentTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											UIElement[obj_HangarSale_UndercutPercent@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											UIElement[obj_HangarSale_UndercutValueTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											UIElement[obj_HangarSale_UndercutValue@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Hide
											break
										default
											UIElement[obj_HangarSale_UndercutPercentTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
											UIElement[obj_HangarSale_UndercutPercent@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
											UIElement[obj_HangarSale_UndercutValueTitle@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
											UIElement[obj_HangarSale_UndercutValue@SellingFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:Show
									}
								</OnSelect>
								<OnMouseEnter>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText["This option determines how ComBot should set prices."]
								</OnMouseEnter>
								<OnMouseExit>
									UIElement[Information@InformationFrame@ComBot_HangarSale_Frame@ComBot_HangarSale]:SetText[""]
								</OnMouseExit>
							</ComboBox>		
						</Children>
					</Frame>

					<Text name='InformationFrameTitle'> 
						<X>1%</X> 
						<Y>80%</Y> 
						<Width>32%</Width> 
						<Height>4%</Height> 
						<Text>Information</Text>
						<OnLoad>
							This.Font:SetColor[FFFFFF00]
						</OnLoad>
					</Text>
					<Frame name="InformationFrame">
						<X>0%</X>
						<Y>82%</Y>
						<Width>100%</Width>
						<Height>18%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='Information'> 
								<X>5%</X> 
								<Y>5%</Y> 
								<Width>90%</Width> 
								<Height>90%</Height> 
								<Wrap />
								<VerticalAlignment>Center</VerticalAlignment>
							</Text>
						</Children>
					</Frame>

				</Children>
			</Frame>
		</Children>
	</window>
	
</ISUI>
