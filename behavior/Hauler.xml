<?xml version="1.0" encoding="UTF-8"?>
<ISUI>

<!--

ComBot  Copyright © 2012  Tehtsuo and Vendan

This file is part of ComBot.

ComBot is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ComBot is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with ComBot.  If not, see <http://www.gnu.org/licenses/>.

-->

	<template name='Information.Font'>	
		<Name>Terminal</Name>
		<Size>8</Size>
		<Color>FFFFFFFF</Color>
	</template>	
	<template name='Text.Font'>	
		<Name>Verdana</Name>
		<Size>12</Size>
		<Color>FFFFFFFF</Color>
		<Bold />
	</template>	

	<window name='ComBot_Hauler'>
		<Visible>1</Visible>
		<BackGroundColor></BackGroundColor>
		<Border>0</Border>
		<X>200</X>
		<Y>300</Y>
		<Width>800</Width>
		<Height>600</Height>
		<TitleBar>
			<Width>100%</Width>
			<Height>20</Height>
			<Border>0</Border>
			<BackgroundColor>FF888888</BackgroundColor>
			<Children>
				<Text name='ComBot_Hauler_TitleBar_Title'>
					<X>0</X>
					<Y>3</Y>
					<Width>100%</Width>
					<Height>20</Height>
					<Alignment>Center</Alignment>
					<Text>Hauler Configuration</Text>
				</Text>
				<button	Name='Help'>
					<Font template='Button.Font' />
					<BackgroundColor>FF000000</BackgroundColor>
					<X>r80</X>
					<Y>0</Y>
					<Width>40</Width>
					<Height>20</Height>
					<Text>Help</Text>
					<OnLeftClick>
						timedcommand 0 "OSExecute http://combot.vendaria.net/index.php?title=Hauler"
					</OnLeftClick>
				</button>
				<button	Name='Close'>
					<X>r40</X>
					<Y>0</Y>
					<Width>40</Width>
					<Height>20</Height>
					<Text>Close</Text>
					<OnLeftClick>
						if !${EVE.Bookmark[${Script[ComBot].VariableScope.Hauler.Config.Dropoff}](exists)}
						{
							Script[ComBot].VariableScope.UI:Update["obj_Hauler", "Unable to verify Dropoff bookmark", "r"]
						}
						if !${EVE.Bookmark[${Script[ComBot].VariableScope.Hauler.Config.Pickup}](exists)}
						{
							Script[ComBot].VariableScope.UI:Update["obj_Hauler", "Unable to verify Pickup bookmark", "r"]
						}
						Script[ComBot].VariableScope.Hauler.LocalUI:Stop
						ui -unload "&filepath;/Hauler"
					</OnLeftClick>
				</button>
			</Children>
		</TitleBar>
		<Children name="Hauler_Children">
			<Frame name="Hauler_Frame">
				<X>0</X>
				<Y>5</Y>
				<Width>100%</Width>
				<Height>100%</Height>
				<BackgroundColor>FF000000</BackgroundColor>
				<Border>1</Border>
				<BorderColor>FFFFFFFF</BorderColor>
				<Children name="Hauler_Frame_Children">
					<Text name='PickupFrameTitle'> 
						<X>1%</X> 
						<Y>2%</Y> 
						<Width>32%</Width> 
						<Height>4%</Height> 
						<Text>Pickup Configuration</Text>
					</Text>
					<Frame name="PickupoffFrame">
						<X>0%</X>
						<Y>4%</Y>
						<Width>100%</Width>
						<Height>30%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='PickupTitle'> 
								<X>34%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Pickup Bookmark</Text>
							</Text>
							<Textentry name='Pickup'> 
								<X>34%</X> 
								<Y>10%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<OnLoad>
									This:SetText[${Script[ComBot].VariableScope.Hauler.Config.Pickup}]
								</OnLoad>
								<OnChange>
									if ${This.Text.Length}
									{
										Script[ComBot].VariableScope.Hauler.Config:SetPickup[${This.Text}]
									}
									else
									{
										Script[ComBot].VariableScope.Hauler.Config:SetPickup[\"\"]
									}
									UIElement[PickupList@Hauler_Frame@ComBot_Hauler]:Show
									Script[ComBot].VariableScope.Hauler.LocalUI:Start
								</OnChange>
							</Textentry>
							<listbox Name="PickupList">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>34%</X>
								<Y>25%</Y>
								<Width>32%</Width>
								<Height>70%</Height>
								<OnLoad>
									This:SetZOrder[alwaysontop]
									This:Hide
								</OnLoad>
								<OnSelect>
									UIElement[Pickup@Hauler_Frame@ComBot_Hauler]:SetText[${This.SelectedItem.Text}]
									Script[ComBot].VariableScope.Hauler.Config:SetPickup[${This.SelectedItem.Text}]
									This:Hide
									Script[ComBot].VariableScope.Hauler.LocalUI:Stop
								</OnSelect>
							</listbox>					

							<Text name='PickupTypeTitle'> 
								<X>1%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Pickup Type</Text>
							</Text>
							<listbox Name="PickupType">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>1%</X>
								<Y>10%</Y>
								<Width>32%</Width>
								<Height>85%</Height>
								<Items>
									<Item>Orca</Item>
									<Item>Jetcan</Item>
									<Item>Container</Item>
									<Item>Personal Hangar</Item>
									<Item>Corporation Hangar</Item>
								</Items>
								<OnLoad>
									This.ItemByText[${Script[ComBot].VariableScope.Hauler.Config.Pickup_Type}]:Select
									UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:ClearItems

									switch ${Script[ComBot].VariableScope.Hauler.Config.Pickup_Type}
									{
										case Container
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Container Name]
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Hide
											break
										case Orca
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Orca Pilot Name]
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Hide
											break
										case Jetcan
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Jetcan Prefix]
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:AddItem[Fleet Jetcan]
											;UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:AddItem[Corporate Bookmark Jetcan]
											;UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:AddItem[On-Demand Jetcan]
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler].ItemByText[${Script[ComBot].VariableScope.Hauler.Config.Pickup_SubType}]:Select
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Show
											break
										default
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Hide
											break
									}
								</OnLoad>
								<OnSelect>
									Script[ComBot].VariableScope.Hauler.Config:SetPickup_Type[${This.SelectedItem.Text}]
									UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:ClearItems

									switch ${Script[ComBot].VariableScope.Hauler.Config.Pickup_Type}
									{
										case Container
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Container Name]
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Hide
											break
										case Orca
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Orca Pilot Name]
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Hide
											break
										case Jetcan
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Jetcan Prefix]
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:AddItem[Fleet Jetcan]
											;UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:AddItem[Corporate Bookmark Jetcan]
											;UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:AddItem[On-Demand Jetcan]
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler].ItemByText[${Script[ComBot].VariableScope.Hauler.Config.Pickup_SubType}]:Select
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Show
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Show
											break
										default
											UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubType@Hauler_Frame@ComBot_Hauler]:Hide
											UIElement[PickupSubTypeTitle@Hauler_Frame@ComBot_Hauler]:Hide
											break
									}
								</OnSelect>
							</listbox>
						</Children>
					</Frame>
						
						
					<Text name='DropoffFrameTitle'> 
						<X>1%</X> 
						<Y>36%</Y> 
						<Width>32%</Width> 
						<Height>4%</Height> 
						<Text>Dropoff Configuration</Text>
					</Text>
					<Frame name="DropoffFrame">
						<X>0%</X>
						<Y>38%</Y>
						<Width>100%</Width>
						<Height>30%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='obj_Hauler_ThresholdTitle'> 
								<X>34%</X> 
								<Y>33%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<OnLoad>
									This:SetText[Cargo Threshold: ${Script[ComBot].VariableScope.Hauler.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Hauler.Config.Threshold} * .01 * ${MyShip.CargoCapacity}].Round} m3]
								</OnLoad>
							</Text>						 
							<Slider name='obj_Hauler_Threshold'> 
								<X>34%</X> 
								<Y>40%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<Border>1</Border>
								<OnLoad>
									This:SetRange[100]
									This:SetValue[${Script[ComBot].VariableScope.Hauler.Config.Threshold}]
								</OnLoad>
								<OnChange>
									Script[ComBot].VariableScope.Hauler.Config:SetThreshold[${This.Value}]
									UIElement[obj_Hauler_ThresholdTitle@Hauler_Frame@ComBot_Hauler]:SetText[Cargo Threshold: ${Script[ComBot].VariableScope.Hauler.Config.Threshold}% = ${Math.Calc[${Script[ComBot].VariableScope.Hauler.Config.Threshold} * .01 * ${MyShip.CargoCapacity}].Round} m3]
								</OnChange>
							</Slider>						 
							<Text name='DropoffTitle'> 
								<X>34%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Dropoff Bookmark</Text>
							</Text>
							<Textentry name='Dropoff'> 
								<X>34%</X> 
								<Y>10%</Y> 
								<Width>32%</Width> 
								<Height>15%</Height> 
								<OnLoad>
									This:SetText[${Script[ComBot].VariableScope.Hauler.Config.Dropoff}]
								</OnLoad>
								<OnChange>
									if ${This.Text.Length}
									{
										Script[ComBot].VariableScope.Hauler.Config:SetDropoff[${This.Text}]
									}
									else
									{
										Script[ComBot].VariableScope.Hauler.Config:SetDropoff[\"\"]
									}
									UIElement[DropoffList@Hauler_Frame@ComBot_Hauler]:Show
									Script[ComBot].VariableScope.Hauler.LocalUI:Start
								</OnChange>
							</Textentry>
							<listbox Name="DropoffList">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>34%</X>
								<Y>25%</Y>
								<Width>32%</Width>
								<Height>70%</Height>
								<OnLoad>
									This:SetZOrder[alwaysontop]
									This:Hide
								</OnLoad>
								<OnSelect>
									UIElement[Dropoff@Hauler_Frame@ComBot_Hauler]:SetText[${This.SelectedItem.Text}]
									Script[ComBot].VariableScope.Hauler.Config:SetDropoff[${This.SelectedItem.Text}]
									This:Hide
									Script[ComBot].VariableScope.Hauler.LocalUI:Stop
								</OnSelect>
							</listbox>
							
							<Text name='DropoffTypeTitle'> 
								<X>1%</X> 
								<Y>3%</Y> 
								<Width>32%</Width> 
								<Height>10%</Height> 
								<Alignment>Center</Alignment>
								<Text>Dropoff Type</Text>
							</Text>
							<listbox Name="DropoffType">
								<BackgroundColor>FF000000</BackgroundColor>
								<Border>1</Border>
								<BorderColor>FFFFFFFF</BorderColor>
								<X>1%</X>
								<Y>10%</Y>
								<Width>32%</Width>
								<Height>85%</Height>
								<Items>
									<Item>Personal Hangar</Item>
									<Item>Container</Item>
									<Item>Corporation Folder 1</Item>
									<Item>Corporation Folder 2</Item>
									<Item>Corporation Folder 3</Item>
									<Item>Corporation Folder 4</Item>
									<Item>Corporation Folder 5</Item>
									<Item>Corporation Folder 6</Item>
									<Item>Corporation Folder 7</Item>
								</Items>
								<OnLoad>
									This.ItemByText[${Script[ComBot].VariableScope.Hauler.Config.Dropoff_Type}]:Select
									if !${Script[ComBot].VariableScope.Hauler.Config.Dropoff_Type.Equal[Container]}
									{
										UIElement[obj_Hauler_Dropoff_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Hide
										UIElement[obj_Hauler_Dropoff_ContainerName@Hauler_Frame@ComBot_Hauler]:Hide
									}
								</OnLoad>
								<OnSelect>
									Script[ComBot].VariableScope.Hauler.Config:SetDropoff_Type[${This.SelectedItem.Text}]
									if !${Script[ComBot].VariableScope.Hauler.Config.Dropoff_Type.Equal[Container]}
									{
										UIElement[obj_Hauler_Dropoff_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Hide
										UIElement[obj_Hauler_Dropoff_ContainerName@Hauler_Frame@ComBot_Hauler]:Hide
									}
									else
									{
										UIElement[obj_Hauler_Dropoff_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
										UIElement[obj_Hauler_Dropoff_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
									}
								</OnSelect>
							</listbox>
							
						</Children>
					</Frame>
						
					
					
					<Text name='obj_Hauler_Dropoff_ContainerNameTitle'> 
						<X>1%</X> 
						<Y>11%</Y> 
						<Width>32%</Width> 
						<Height>2%</Height> 
						<Alignment>Center</Alignment>
						<Text>Container Name</Text>
					</Text>
					<TextEntry name='obj_Hauler_Dropoff_ContainerName'> 
						<X>1%</X> 
						<Y>13%</Y> 
						<Width>32%</Width> 
						<Height>3%</Height> 
						<OnLoad>
							This:SetText[${Script[ComBot].VariableScope.Hauler.Config.Dropoff_ContainerName}]
						</OnLoad>
						<OnChange>
							Script[ComBot].VariableScope.Hauler.Config:SetDropoff_ContainerName[${This.Text}]
						</OnChange>
					</TextEntry>
					
					
					
					<Text name='obj_Hauler_Pickup_ContainerNameTitle'> 
						<X>1%</X> 
						<Y>41%</Y> 
						<Width>32%</Width> 
						<Height>2%</Height> 
						<Alignment>Center</Alignment>
						<Text>Orca Name</Text>
					</Text>
					<TextEntry name='obj_Hauler_Pickup_ContainerName'> 
						<X>1%</X> 
						<Y>43%</Y> 
						<Width>32%</Width> 
						<Height>3%</Height> 
						<OnLoad>
							This:SetText[${Script[ComBot].VariableScope.Hauler.Config.Pickup_ContainerName}]
						</OnLoad>
						<OnChange>
							Script[ComBot].VariableScope.Hauler.Config:SetPickup_ContainerName[${This.Text}]
						</OnChange>
					</TextEntry>

					<Text name='PickupSubTypeTitle'> 
						<X>67%</X> 
						<Y>31%</Y> 
						<Width>32%</Width> 
						<Height>2%</Height> 
						<Alignment>Center</Alignment>
						<Text>Jetcan Mode</Text>
					</Text>
					<listbox Name="PickupSubType">
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>67%</X>
						<Y>33%</Y>
						<Width>32%</Width>
						<Height>15%</Height>
						<OnLoad>
							switch ${Script[ComBot].VariableScope.Hauler.Config.Pickup_Type}
							{
								case Jetcan
									This:AddItem[Fleet Jetcan]
									This:AddItem[Corporate Bookmark Jetcan]
									This:AddItem[On-Demand Jetcan]
									break
							}
							This.ItemByText[${Script[ComBot].VariableScope.Hauler.Config.Pickup_SubType}]:Select
							if ${Script[ComBot].VariableScope.Hauler.Config.Pickup_SubType.Equal[Corporate Bookmark Jetcan]}
							{
								UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
								UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
								UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Jetcan Bookmark Prefix]
							}
							else
							{
								UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Hide
								UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[ComBot].VariableScope.Hauler.Config:SetPickup_SubType[${This.SelectedItem.Text}]
							if ${Script[ComBot].VariableScope.Hauler.Config.Pickup_SubType.Equal[Corporate Bookmark Jetcan]}
							{
								UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Show
								UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Show
								UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:SetText[Jetcan Bookmark Prefix]
							}
							else
							{
								UIElement[obj_Hauler_Pickup_ContainerName@Hauler_Frame@ComBot_Hauler]:Hide
								UIElement[obj_Hauler_Pickup_ContainerNameTitle@Hauler_Frame@ComBot_Hauler]:Hide
							}
						</OnSelect>
					</listbox>
					
					

				</Children>
			</Frame>
		</Children>
	</window>
	
</ISUI>
